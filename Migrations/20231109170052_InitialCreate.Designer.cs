// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Project2.Migrations
{
    [DbContext(typeof(EscuelaContext))]
    [Migration("20231109170052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Asunto", b =>
                {
                    b.Property<int>("IdAsunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdAsunto");

                    b.ToTable("Asuntos");
                });

            modelBuilder.Entity("Domicilio", b =>
                {
                    b.Property<int>("IdDomicilio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.HasKey("IdDomicilio");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdPais");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEstado");

                    b.HasIndex("IdPais");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Estudiante", b =>
                {
                    b.Property<string>("CURP")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IdDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("IdNivelEducativo")
                        .HasColumnType("int");

                    b.Property<string>("Materno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Paterno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoEstudiante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CURP");

                    b.HasIndex("IdDomicilio");

                    b.HasIndex("IdNivelEducativo");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdMunicipio");

                    b.HasIndex("IdEstado");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("NivelEducativo", b =>
                {
                    b.Property<int>("IdNivelEducativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdNivelEducativo");

                    b.ToTable("NivelesEducativos");
                });

            modelBuilder.Entity("Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int>("Folio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaDeTramite")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaRegistroTramite")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdAsunto")
                        .HasColumnType("int");

                    b.Property<int?>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroTurno")
                        .HasColumnType("int");

                    b.HasKey("Folio");

                    b.HasIndex("CURP");

                    b.HasIndex("IdAsunto");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domicilio", b =>
                {
                    b.HasOne("Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Municipio");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Estado", b =>
                {
                    b.HasOne("Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Estudiante", b =>
                {
                    b.HasOne("Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("IdDomicilio");

                    b.HasOne("NivelEducativo", "NivelEducativo")
                        .WithMany()
                        .HasForeignKey("IdNivelEducativo");

                    b.Navigation("Domicilio");

                    b.Navigation("NivelEducativo");
                });

            modelBuilder.Entity("Municipio", b =>
                {
                    b.HasOne("Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.HasOne("Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("CURP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Asunto", "Asunto")
                        .WithMany()
                        .HasForeignKey("IdAsunto");

                    b.HasOne("Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio");

                    b.Navigation("Asunto");

                    b.Navigation("Estudiante");

                    b.Navigation("Municipio");
                });
#pragma warning restore 612, 618
        }
    }
}
